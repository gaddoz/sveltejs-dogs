openapi: 3.0.0
info:
  title: Development api
  description: Development api with KeyCloakAuth
  version: 1.0.0
servers:
  - url: 'https://dev.frontend.local/api/v1'
    description: Development Sample Server
security:
  - KeyCloakAuth: []
paths:
  /features:
    get:
      tags:
        - features
      summary: get features
      operationId: getFeatures
      parameters:
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/Search'
        - $ref: '#/components/parameters/NameLikeFilter'
        - $ref: '#/components/parameters/NameExactFilter'
      responses:
        '200':
          description: paginated features
          headers:
            X-Total-Count:
              description: Total number of features.
              required: true
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureList'
        '500':
          description: Generic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
    post:
      tags:
        - features
      summary: insert feature
      operationId: createFeature
      requestBody:
        $ref: '#/components/requestBodies/Feature'
      responses:
        '201':
          description: created feature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'

        '500':
          description: Generic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
  /features/{id}:
    get:
      tags:
        - features
      summary: get feature
      operationId: getFeature
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: feature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
        '500':
          description: Generic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
    put:
      tags:
        - features
      summary: put feature
      operationId: updateFeature
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        $ref: '#/components/requestBodies/Feature'
      responses:
        '200':
          description: feature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'

        '500':
          description: Generic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
  /items:
    get:
      tags:
        - items
      summary: get items
      operationId: getItems
      parameters:
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/Search'
        - $ref: '#/components/parameters/NameLikeFilter'
        - $ref: '#/components/parameters/NameExactFilter'
      responses:
        '200':
          description: paginated items
          headers:
            X-Total-Count:
              description: Total number of items.
              required: true
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemList'
        '500':
          description: Generic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
    post:
      tags:
        - items
      summary: insert item
      operationId: createItem
      requestBody:
        $ref: '#/components/requestBodies/Item'
      responses:
        '201':
          description: created item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'

        '500':
          description: Generic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
  /items/{id}:
    get:
      tags:
        - items
      summary: get item
      operationId: getItem
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '500':
          description: Generic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
    put:
      tags:
        - items
      summary: put item
      operationId: updateItem
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        $ref: '#/components/requestBodies/Item'
      responses:
        '200':
          description: item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'

        '500':
          description: Generic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
  /posts:
    get:
      tags:
        - posts
      summary: get posts
      operationId: getPosts
      parameters:
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/Search'
        - $ref: '#/components/parameters/NameLikeFilter'
        - $ref: '#/components/parameters/NameExactFilter'
      responses:
        '200':
          description: paginated posts
          headers:
            X-Total-Count:
              description: Total number of posts.
              required: true
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostList'
        '500':
          description: Generic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
    post:
      tags:
        - posts
      summary: insert post
      operationId: createPost
      requestBody:
        $ref: '#/components/requestBodies/Post'
      responses:
        '201':
          description: created post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'

        '500':
          description: Generic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
  /posts/{id}:
    get:
      tags:
        - posts
      summary: get post
      operationId: getPost
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '500':
          description: Generic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
    put:
      tags:
        - posts
      summary: put post
      operationId: updatePost
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        $ref: '#/components/requestBodies/Post'
      responses:
        '200':
          description: post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'

        '500':
          description: Generic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
  /users:
    get:
      tags:
        - users
      summary: get users
      operationId: getUsers
      parameters:
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/Search'
        - $ref: '#/components/parameters/NameLikeFilter'
        - $ref: '#/components/parameters/NameExactFilter'
      responses:
        '200':
          description: paginated users
          headers:
            X-Total-Count:
              description: Total number of users.
              required: true
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
        '500':
          description: Generic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
    post:
      tags:
        - users
      summary: insert user
      operationId: createUser
      requestBody:
        $ref: '#/components/requestBodies/User'
      responses:
        '201':
          description: created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

        '500':
          description: Generic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
  /users/{id}:
    get:
      tags:
        - users
      summary: get user
      operationId: getUser
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '500':
          description: Generic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
    put:
      tags:
        - users
      summary: put user
      operationId: updateUser
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        $ref: '#/components/requestBodies/User'
      responses:
        '200':
          description: user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

        '500':
          description: Generic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'

components:

  parameters:
    PageNumber:
      name: _page
      in: query
      description: A page number within the paginated result set.
      schema:
        type: integer
        format: int32
        minimum: 1
        default: 1
    PageSize:
      name: _limit
      in: query
      description: Number of results returned per page.
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 1000
        default: 1000
    NameExactFilter:
      name: name
      in: query
      description: name exact search
      schema:
        type: string
    NameLikeFilter:
      name: name_like
      in: query
      description: name exact search
      schema:
        type: string
    Search:
      name: q
      in: query
      description: Full-text search
      schema:
        type: string

  requestBodies:

    Feature:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Feature'
      required: true

    Item:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Item'
      required: true

    Post:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Post'
      required: true

    User:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
      required: true

  schemas:

    AppError:
      type: object
      required:
        - message
      properties:
        message:
          type: string
        code:
          type: string

    Feature:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - name

    FeatureList:
      type: array
      items:
        $ref: '#/components/schemas/User'

    Item:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - name

    ItemList:
      type: array
      items:
        $ref: '#/components/schemas/Item'

    Post:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        title:
          type: string
        body:
          type: string
      required:
        - title
        - body
        - userId

    PostList:
      type: array
      items:
        $ref: '#/components/schemas/Post'

    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
      required:
        - name
        - email

    UserList:
      type: array
      items:
        $ref: '#/components/schemas/User'



